using NUnit.Framework;
using WindowsillSoft.CodeChallenges.AdventOfCode._2018;

namespace WindowsillSoft.CodeChallenges.AdventOfCode.Tests.AoC2018
{
    public class Day15Test : TestBase<Day15>
    {
        [Test,
            TestCase("#######\n#.G...#\n#...EG#\n#.#.#G#\n#..G#E#\n#.....#\n#######", "27730"),
            TestCase("#######\n#G..#E#\n#E#E.E#\n#G.##.#\n#...#E#\n#...E.#\n#######", "36334"),
            TestCase("#######\n#E..EG#\n#.#G.E#\n#E.##E#\n#G..#.#\n#..E#.#\n#######", "39514"),
            TestCase("#######\n#E.G#.#\n#.#G..#\n#G.#.G#\n#G..#.#\n#...E.#\n#######", "27755"),
            TestCase("#######\n#.E...#\n#.#..G#\n#.###.#\n#E#G#G#\n#...#G#\n#######", "28944"),
            TestCase("#########\n#G......#\n#.E.#...#\n#..##..G#\n#...##..#\n#...#...#\n#.G...G.#\n#.....G.#\n#########", "18740")]
        public void Part1(string input, string result)
        {
            var solver = GetSolver(input);

            Assert.That(solver.ExecutePart1(), Is.EqualTo(result));
        }

        [Test,
            TestCase("#######\n#.G...#\n#...EG#\n#.#.#G#\n#..G#E#\n#.....#\n#######", "4988"),
            TestCase("#######\n#E..EG#\n#.#G.E#\n#E.##E#\n#G..#.#\n#..E#.#\n#######", "31284"),
            TestCase("#######\n#E.G#.#\n#.#G..#\n#G.#.G#\n#G..#.#\n#...E.#\n#######", "3478"),
            TestCase("#######\n#.E...#\n#.#..G#\n#.###.#\n#E#G#G#\n#...#G#\n#######", "6474"),
            TestCase("#########\n#G......#\n#.E.#...#\n#..##..G#\n#...##..#\n#...#...#\n#.G...G.#\n#.....G.#\n#########", "1140")]
        public void Part2(string input, string result)
        {
            var solver = GetSolver(input);

            Assert.That(solver.ExecutePart2(), Is.EqualTo(result));
        }

        [Test]
        public void FullRun()
        {
            var solver = GetSolver("################################\n####################.###########\n###################..##..#######\n###################.###..#######\n###################.###.########\n##################G.###.########\n##..############.#..##..########\n#...#####.####.....##...########\n#G.....##..###.#.GG#...G.....G##\n#...G....G.G##.....#.#.......###\n##..............G............###\n#......GG.....G............#####\n#####.........#####.......E..###\n#####.....G..#######.......#####\n#####.......#########......###.#\n######......#########..........#\n#####.....G.#########..........#\n##.....#...G#########......#...#\n###.#....G..#########G.........#\n##..###......#######E..........#\n##..###...G...#####E..E.....E..#\n###..##...............E.#.E....#\n###..##..##E...###......##..####\n##..G...###....###......########\n##......###E....##....##########\n###...#####..E..###...##########\n##....####......####.###########\n####..#####.....##...###########\n############..####....##########\n############.#####....##########\n##########...#####.#.###########\n################################");
            Assert.That("239010", Is.EqualTo(solver.ExecutePart1()));
            Assert.That("62468", Is.EqualTo(solver.ExecutePart2()));
        }
    }
}

